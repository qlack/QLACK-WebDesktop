<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.eurodyn.qlack.webdesktop</groupId>
    <artifactId>qlack-webdesktop-apps-applications-management</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>qlack-webdesktop-apps-applications-management-app</artifactId>
  <packaging>jar</packaging>

  <dependencies>
    <!-- QLACK Dependencies -->
    <dependency>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <artifactId>qlack-fuse-aaa</artifactId>
      <version>${qlack.version}</version>
    </dependency>
    <dependency>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <artifactId>qlack-fuse-lexicon</artifactId>
      <version>${qlack.version}</version>
    </dependency>
    <dependency>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <artifactId>qlack-fuse-crypto</artifactId>
      <version>${qlack.version}</version>
    </dependency>
    <dependency>
      <groupId>com.eurodyn.qlack.webdesktop</groupId>
      <artifactId>qlack-webdesktop-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <artifactId>qlack-util-querydsl</artifactId>
      <groupId>com.eurodyn.qlack.util</groupId>
      <version>${qlack.version}</version>
    </dependency>

    <!-- Spring Boot Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
      <version>${spring-security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Third-party Dependencies -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql-connector.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <annotationProcessorPath>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <configuration>
              <outputDirectory>${project.build.directory}/classes/resources/</outputDirectory>
              <resources>
                <resource>
                  <directory>
                    ${project.parent.basedir}/qlack-webdesktop-apps-applications-management-ui/target/dist
                  </directory>
                </resource>
              </resources>
            </configuration>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <id>copy-resources</id>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker-dev</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>${dockerfile-maven-plugin.version}</version>
            <configuration>
              <repository>eurodyn/${project.artifactId}</repository>
              <tag>latest</tag>
            </configuration>
            <executions>
              <execution>
                <phase>clean</phase>
                <id>tag-version</id>
                <goals>
                  <goal>build</goal>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <tag>${project.version}</tag>
                </configuration>
              </execution>
              <execution>
                <phase>clean</phase>
                <id>tag-latest</id>
                <goals>
                  <goal>build</goal>
                  <goal>tag</goal>
                </goals>
                <configuration>
                  <tag>latest</tag>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-build</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>${dockerfile-maven-plugin.version}</version>
            <configuration>
              <username>${DOCKER_HUB_ID}</username>
              <password>${DOCKER_HUB_PWD}</password>
              <id>docker.io</id>
              <repository>eurodyn/${project.artifactId}</repository>
              <tag>latest</tag>
            </configuration>
            <executions>
              <execution>
                <phase>clean</phase>
                <id>tag-version</id>
                <goals>
                  <goal>build</goal>
                  <goal>tag</goal>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <tag>${project.version}</tag>
                </configuration>
              </execution>
              <execution>
              <phase>clean</phase>
              <id>tag-latest</id>
                <goals>
                  <goal>build</goal>
                  <goal>tag</goal>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <tag>latest</tag>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
