<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>qlack-webdesktop-app</artifactId>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Global configuration for the compiler -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <annotationProcessorPaths>
              <annotationProcessorPath>
                <artifactId>mapstruct-processor</artifactId>
                <groupId>org.mapstruct</groupId>
                <version>${mapstruct.version}</version>
              </annotationProcessorPath>
              <annotationProcessorPath>
                <artifactId>querydsl-jpa-codegen</artifactId>
                <groupId>com.querydsl</groupId>
                <version>${querydsl.version}</version>
              </annotationProcessorPath>
              <annotationProcessorPath>
                <artifactId>querydsl-apt</artifactId>
                <classifier>jpa</classifier>
                <groupId>com.querydsl</groupId>
                <version>${querydsl.version}</version>
              </annotationProcessorPath>
              <annotationProcessorPath>
                <artifactId>lombok</artifactId>
                <groupId>org.projectlombok</groupId>
                <version>${lombok.version}</version>
              </annotationProcessorPath>
            </annotationProcessorPaths>
            <compilerArgs>
              <!-- The -parameters argument is crucial for the correct function
               of the authentication interceptor, due to heavy use of the Reflection API -->
              <arg>-parameters</arg>
            </compilerArgs>
            <encoding>UTF-8</encoding>
            <showDeprecation>true</showDeprecation>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <useIncrementalCompilation>false</useIncrementalCompilation>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.compiler.version}</version>
        </plugin>

        <plugin>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <fork>true</fork>
            <skip>false</skip>
          </configuration>
          <groupId>org.springframework.boot</groupId>
          <version>${spring.boot.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <configuration>
                <outputDirectory>${project.build.directory}/classes/resources/</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.parent.basedir}/qlack-webdesktop-ui/target/dist</directory>
                  </resource>
                </resources>
              </configuration>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <id>copy-resources</id>
              <phase>validate</phase>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>

  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      <artifactId>spring-boot-starter</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
      <version>${spring.boot.version}</version>
    </dependency>

    <!-- QLACK dependencies  -->
    <dependency>
      <artifactId>qlack-fuse-crypto</artifactId>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <scope>compile</scope>
      <version>${qlack.version}</version>
    </dependency>
    <dependency>
      <artifactId>qlack-fuse-lexicon</artifactId>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <version>${qlack.version}</version>
    </dependency>
    <dependency>
      <artifactId>qlack-fuse-aaa</artifactId>
      <groupId>com.eurodyn.qlack.fuse</groupId>
      <version>${qlack.version}</version>
    </dependency>

    <!-- Third-party dependencies -->
    <dependency>
      <artifactId>querydsl-jpa</artifactId>
      <groupId>com.querydsl</groupId>
      <version>${querydsl.version}</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <artifactId>mapstruct-processor</artifactId>
      <groupId>org.mapstruct</groupId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <artifactId>mapstruct</artifactId>
      <groupId>org.mapstruct</groupId>
      <version>${mapstruct.version}</version>
    </dependency>

    <!-- Database dependencies -->
    <dependency>
      <artifactId>mysql-connector-java</artifactId>
      <groupId>mysql</groupId>
      <version>${mysql.connector.version}</version>
    </dependency>
    <dependency>
      <artifactId>liquibase-core</artifactId>
      <groupId>org.liquibase</groupId>
      <version>${liquibase.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <artifactId>powermock-module-junit4</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>${powermockito.version}</version>
    </dependency>
    <dependency>
      <artifactId>powermock-api-mockito2</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>${powermockito.version}</version>
    </dependency>
    <dependency>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <version>2.3.0</version>
    </dependency>
    <dependency>
      <artifactId>commons-lang3</artifactId>
      <groupId>org.apache.commons</groupId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-validator</artifactId>
      <groupId>commons-validator</groupId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-security-oauth2-client</artifactId>
      <groupId>org.springframework.security</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
      <groupId>org.springframework.cloud</groupId>
      <version>2.1.3.RELEASE</version>
    </dependency>
  </dependencies>
  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>
  <parent>
    <artifactId>qlack-webdesktop</artifactId>
    <groupId>com.eurodyn.qlack.webdesktop</groupId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>
  <profiles>
    <profile>
      <build>
        <plugins>
          <plugin>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <destFile>${project.build.directory}/jacoco.exec</destFile>
                  <propertyName>argLine</propertyName>
                </configuration>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <id>before-unit-test-execution</id>
              </execution>
              <execution>
                <configuration>
                  <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                  <propertyName>failsafe.jacoco.args</propertyName>
                </configuration>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <id>before-integration-test-execution</id>
                <phase>pre-integration-test</phase>
              </execution>
              <execution>
                <configuration>
                  <excludes>
                    <exclude>com/eurodyn/qlack/**/**/model/*</exclude>
                  </excludes>
                </configuration>
                <goals>
                  <goal>report</goal>
                </goals>
                <id>report</id>
                <phase>test</phase>
              </execution>
            </executions>
            <groupId>org.jacoco</groupId>
            <version>${jacoco.version}</version>
          </plugin>
        </plugins>
      </build>
      <id>coverage</id>
    </profile>
  </profiles>

  <properties>
    <sonar.coverage.exclusions>
      src/main/java/com/eurodyn/qlack/webdesktop/model/*,
      src/main/java/com/eurodyn/qlack/webdesktop/dto/*
    </sonar.coverage.exclusions>
    <sonar.exclusions>**/generated-sources/**</sonar.exclusions>
    <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
    <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.sources>src/main/java</sonar.sources>
  </properties>

</project>
