# Endpoints
management.endpoints.web.exposure.include=*

# Database
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=<connection_string>
spring.datasource.username=<mysql_username>
spring.datasource.password=<mysql_password>
server.port=8082

# Hibernate
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.show-sql=true

# Connection pool
spring.dataSource.hikari.maxLifetime=28700000
spring.dataSource.hikari.poolName=tua-pool
spring.dataSource.hikari.leakDetectionThreshold=10000
spring.dataSource.hikari.dataSource.cachePrepStmts=true
spring.dataSource.hikari.dataSource.prepStmtCacheSize=250
spring.dataSource.hikari.dataSource.prepStmtCacheSqlLimit=2048
spring.dataSource.hikari.dataSource.useServerPrepStmts=true
spring.dataSource.hikari.dataSource.useLocalSessionState=true
spring.dataSource.hikari.dataSource.rewriteBatchedStatements=true
spring.dataSource.hikari.dataSource.cacheResultSetMetadata=true
spring.dataSource.hikari.dataSource.cacheServerConfiguration=true
spring.dataSource.hikari.dataSource.elideSetAutoCommits=true
spring.dataSource.hikari.dataSource.maintainTimeStats=false

# Logging
logging.file=qlack-test-web.log
logging.pattern.dateformat=dd-MM-yyyy HH:mm:ss.SSS
logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=DEBUG

# Liquibase
spring.liquibase.change-log=classpath:db/changelog/qlack-webdesktop/qlack.webdesktop.changelog.xml

# Authentication (sso, none)
security.enabled=none

# OAuth2 provider
provider.url=<oauth_provider_url>
realm.name=dev

spring.security.oauth2.client.provider.keycloak.authorization-uri=${provider.url}/auth/realms/${realm.name}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${provider.url}/auth/realms/${realm.name}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=${provider.url}/auth/realms/${realm.name}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=${provider.url}/auth/realms/${realm.name}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Client registration for realm `dev`
spring.security.oauth2.client.registration.dev.client-id=<client_id>
spring.security.oauth2.client.registration.dev.client-name=<client_name>
spring.security.oauth2.client.registration.dev.client-secret=<client_secret>
spring.security.oauth2.client.registration.dev.provider=<oauth_provider>
spring.security.oauth2.client.registration.dev.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.dev.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
